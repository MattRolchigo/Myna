#!/bin/bash

# Generated by Gerry Knapp using ChatGPT 3.5 on 2023-08-08
# Prompts:
# - I would like to copy files with the name pattern PartX.LayerY.csv to a location "PX/Y/data.csv. How do I do this?
# - How do I handle command line arguments to the bash script to accept a particular source path?
# - I would also like this script to accept a command line argument for the target_directory.
# - Sometimes my part numbers are in the format 0010 for part number 10. How do I remove the leading zeros?

if [ $# -ne 2 ]; then
    echo "Usage: $0 <source_directory> <target_directory>"
    exit 1
fi

source_directory="$1"       # Read the source directory from the first command-line argument
target_directory="$2"       # Read the target directory from the second command-line argument

# Loop through files matching the pattern
find "$source_directory" -type f -name 'Part*.Layer*.csv' | while read -r filepath; do
    # Extract PartX and LayerY from the file name
    filename=$(basename "$filepath")
    part=$(echo "$filename" | sed -n 's/Part\([0-9]*\).Layer\([0-9]*\).csv/\1/p')
    layer=$(echo "$filename" | sed -n 's/Part\([0-9]*\).Layer\([0-9]*\).csv/\2/p')

    # Remove leading zeros from part number using sed
    part=$(echo "$part" | sed 's/^0*//')
    layer=$(echo "$layer" | sed 's/^0*//')

    # Create the target directory structure if it doesn't exist
    target_dirpath="$target_directory/P$part/$layer/3dthesis/"
    mkdir -p "$target_dirpath"

    # Copy the file to the target directory
    target_filepath="$target_dirpath/data.csv"
    cp "$filepath" "$target_filepath"

    # Check if the copy was successful
    if [ $? -eq 0 ]; then
        echo "Copied: $filename to $target_filepath"
    else
        echo "Failed to copy: $filename"
    fi
done
